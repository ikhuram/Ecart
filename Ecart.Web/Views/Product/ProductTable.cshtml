@model Ecart.Web.ViewModels.ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";
}

<div>
    <form method="post">
        <div class="form-group">
            <label>Search</label>
            <div class="row">
                <div class="col-md-8">
                    <input class="form-control" id="txtSearch" name="search"/>
                </div>
                <div class="col-md-4">
                    <div class="row">
                        <div class="col-md-4 pr-0"><button type="button" id="BtnSearch">Search</button></div>
                        <div class="col-md-4 pr-0"><button type="button" id="BtnNew">New</button></div>
                    </div>
                </div>
            </div>
        </div>
    </form>
   
</div>

<div>
    <table class="table table-striped">
        <thead>
        <tr>
            <td>Name</td>
            <td>Description</td>
            <td>Unit Price</td>
            <td>Category</td>
            <td>Action</td>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Description</td>
                <td>@product.UnitPrice</td>
                <td>
                    @if (product.Category != null)
                    {
                        <text>@product.Category.Name</text>
                    }
                    else
                    {
                        <text>-</text>
                    }
                </td>
                <td>
                    <button class="BtnEdit" data-id="@product.Id">Update</button>
                    <button class="BtnDelete" data-id="@product.Id" >Delete</button>
                    <button class="addtoCart" data-id="@product.Id">Add To Cart</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div>
        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                <button class="pageButtons" data-pageno="1">First</button>
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass pageButtons" data-pageno="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
                <button class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</button>
            }
        }
    </div>
</div>


<script>
    $(".pageButtons").click(function () {

        $.ajax({
                url: "/Product/ProductTable",
                data: {
                    pageNo: $(this).attr("data-pageno"),
                    search: '@Model.SearchTerm'
                }
            })
            .done(function (response) {
                $("#tableContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });

    $("#BtnSearch").click(function() {
        var searchStr = $("#txtSearch").val();

        $.ajax({
            type: "GET",
            url: "/Product/ProductTable",
            data: {
                search: searchStr
            }

        })
        .done(function(response) {
                $("#tableContainer").html(response);
            })
        .fail(function(XMLHttpRequest, textStatus, errorThrown) {

        });
    });

    $("#BtnNew").click(function () {
       //debugger
        $.ajax({
            type: "GET",
            url: "/Product/Create"

        })
        .done(function (response) {
            $("#actionContainer").html(response);

            focusAction();
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {

        });
    });

    $(".BtnEdit").click(function () {
        //debugger;
        $.ajax({
            type: "GET",
            url: "/Product/Edit",
            data: {
                id: $(this).attr("data-id")
            }

        })
        .done(function (response) {
            $("#actionContainer").html(response);
            focusAction();
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {

        });
    });

    $(".BtnDelete").click(function() {
        swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to use this product",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                            type: "POST",
                            url: "/Product/Delete",
                            data: {
                                id: $(this).attr("data-id")
                            }

                        })
                        .done(function (response) {
                            $("#tableContainer").html(response);
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {

                        });

                    swal("Delete! Your product has been deleted!",
                        {
                            icon: "success",
                        });
                } else {
                    swal("Product delete cancelled");
                }
            });
    });
    //$(".BtnDelete").click(function () {

    //    var confirmDelete = confirm("Are you sure, you want to delete this product?");

    //    if (confirmDelete)
    //    {
    //        $.ajax({
    //            type: "POST",
    //            url: "/Product/Delete",
    //            data: {
    //                id: $(this).attr("data-id")
    //            }

    //        })
    //        .done(function (response) {
    //            $("#tableContainer").html(response);
    //        })
    //        .fail(function (XMLHttpRequest, textStatus, errorThrown) {

    //        });
    //    }
    //});

    var cartProducts = [];

    $(".addtoCart").click(function () {

        var productId = $(this).attr("data-id");

        cartProducts.push(productId);
        $.cookie("cartProducts", cartProducts.join('-'), {path: '/'});
    });


    function focusAction() {
        //alert("SUCCESS");
        $('html, body').animate({
            scrollTop: $("#actionContainer").offset().top - 100
        },1000);
    }
</script>